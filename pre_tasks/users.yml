- name: Create User
  ansible.builtin.user:
    name: "{{ user.name }}"
    password: ""
    shell: /bin/bash
    append: true
    groups: users
    state: present
    update_password: on_create
  run_once: true
  become: true

- name: Get user ID
  getent:
    database: passwd
    key: ansible
  register: user_info

- name: Check if user is a system user
  debug:
    msg: "User ansible is a system user {{ user_info.getent_passwd[0].uid }}"
  # when: user_info.getent_passwd[0].uid < 1000

- name: Remove user ansible if it's exist as non system user
  ansible.builtin.user:
    name: ansible
    state: absent
    remove: yes
    force: yes
  when: user_info.getent_passwd[0].uid > 1000
  become: true

- name: Create user ansible as system user
  ansible.builtin.user:
    name: ansible
    system: true
    shell: /bin/bash
    append: true
    groups: users
    state: present
    update_password: on_create
  become: true

- name: "Add {{ user.name }} to sudoers"
  community.general.sudoers:
    name: "{{ user.name }}"
    state: present
    user: "{{ user.name }}"
    runas: root
    commands: ALL
    nopassword: true
  become: true

- name: Add ansible to sudoers
  community.general.sudoers:
    name: ansible
    state: present
    user: ansible
    runas: root
    commands: ALL
    nopassword: true
  become: true

- name: "add  ssh keys for {{ user.name }}"
  authorized_key:
    user: "{{ user.name }}"
    state: present
    key: "{{ lookup('file', '{{ item }}') }}"
  with_fileglob:
    - "files/*.pub"
  become: true
    
- name: add ssh keys for ansible
  authorized_key:
    user: ansible
    state: present
    key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKG7DNrs2hcOmEG4gXRVyvAgrvoiE2iIBSFoPtRYPHl9 ansible"
  become: true
  
  # Ensure .config directory exists for regular user
- name: Ensure .config directory exists for users
  become: true
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    force: true
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: '0755'
  loop:
    - { path: "{{ user.home }}/.config", owner: "{{ user.name }}", group: "{{ user.name }}" }
    - { path: "/root/.config", owner: "root", group: "root" }

- name: Copy dotfiles to /etc/skel and users profile
  ansible.builtin.copy:
    src: "files/dotfiles/"
    dest: "{{ item.path }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: '0644'
    directory_mode: '0755'
    force: true
  loop:
    - { path: "{{ user.home }}/", owner: "{{ user.name }}", group: "{{ user.name }}" }
    - { path: "/root/", owner: "root", group: "root" }
    - { path: "/etc/skel/", owner: "root", group: "root" }
  become: true
