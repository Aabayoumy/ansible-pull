- name: check nvim exist
  stat:
    path: /usr/local/bin/nvim
  register: nvim

- name: "Neovim | {{ ansible_distribution }} | Dependencies"
  ansible.builtin.package:
    name:
      - cmake
      - curl
      - pkg-config
      - libtool
      - unzip
      - ansible-lint
      - ripgrep
    state: present
  become: true
  when: not (ansible_facts['ansible_distribution'] == "Archlinux")

- name: "Neovim | Checking for Distribution Config: {{ ansible_distribution }}"
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/{{ ansible_distribution }}.yml"
  register: neovim_distribution_config

- name: "Neovim | Run Tasks: {{ ansible_distribution }}"
  ansible.builtin.include_tasks: "{{ ansible_distribution }}.yml"
  when: neovim_distribution_config.stat.exists


- name: Neovim | {{ ansible_distribution }} | Install Neovim
  unarchive:
    src: https://github.com/neovim/neovim/releases/download/stable/nvim-linux64.tar.gz
    dest: /usr/local
    remote_src: yes
    mode: '0755'
    owner: root
    group: root
    extra_opts: [--strip-components=1]
  when: not (nvim.stat.exists) and ansible_architecture == "x86_64"  and not (ansible_facts['ansible_distribution'] == "Archlinux")
  run_once: true


- name: "Neovim | Copy init.lua"
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.config/nvim/init.lua"
    src: "init.lua"
    mode: "0644"

- name: "Neovim | Copy .luarc.json"
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.config/nvim/.luarc.json"
    src: ".luarc.json"
    mode: "0644"
- name: "Neovim | Copy modules"
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.config/nvim/lua"
    src: "lua/"
    mode: "0644"