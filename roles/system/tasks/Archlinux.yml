---
- name: "System | {{ ansible_distribution }} | Update pacman"
  community.general.pacman:
    update_cache: true
    upgrade: true
    state: latest
  become: true

- name: "System | {{ ansible_distribution }} | Install"
  community.general.pacman:
    name:
      - jq
      - open-iscsi
      - fuse3
      - xdg-user-dirs
      - unzip
      - wget
      - wmctrl
      - eza
      - openssh
      - btop
      - bat
      - byobu
      - dust
      - ripgrep
      - fd
    state: present
  become: true

- name: 'Ensure AUR dependencies are installed'
  community.general.pacman:
    name:
      - 'base-devel'
      - 'git'
    state: 'present'

- name: Check yay
  ansible.builtin.stat:
    path: /usr/bin/yay
  register: yay

- name: Check paru
  ansible.builtin.stat:
    path: /usr/bin/paru
  register: paru

- name: "System | {{ ansible_distribution }} | Install yay"
  when: 
    - not yay.stat.exists
    - not host_user == 'root' 
  block:
  - name: yay | Clone
    git:
      repo: https://aur.archlinux.org/yay-bin.git
      dest: "/{{ user.home }}/yay"
      update: true
  - name: yay | change ownership
    file:
      path: /{{ user.home }}/yay # this should be as same as `dest` above
      owner: "{{ user.name }}"
      group: "{{ user.name }}"
      state: directory
      recurse: yes
    become: true
  - name: yay | Build and install
    ansible.builtin.command:
      chdir: "/{{ user.home }}/yay"
      cmd: "makepkg -sfi --noconfirm"
      creates: /usr/bin/yay
    become: false
  - name: yay | Cleanup 
    ansible.builtin.file:
      path: /{{ user.home }}/yay
      state: absent
  - name: Check libalpm.so.14
    ansible.builtin.stat:
      path: /usr/lib/libalpm.so.14
    register: libalpm
  - name: Create a symbolic link
    ansible.builtin.file:
      src: /usr/lib/libalpm.so.15.0.0
      dest: /usr/lib/libalpm.so.14
      owner: root
      group: root
      state: link
    when: not (libalpm.stat.exists) 
  - name: set yay options to cleanafter package installation
    become: false
    shell: yay -Y --answerclean All --removemake --cleanafter --needed  --noprogressbar --noconfirm --save
    args:
      executable: /usr/bin/bash

- name: "System | {{ ansible_distribution }} | Install paru"
  when: 
    - not paru.stat.exists
    - not host_user == 'root'
  block:
  - name: paru | Clone
    git:
      repo: https://aur.archlinux.org/paru-bin.git
      dest: "/{{ user.home }}/paru"
      update: true
  - name: paru | change ownership
    file:
      path: /{{ user.home }}/paru # this should be as same as `dest` above
      owner: "{{ user.name }}"
      group: "{{ user.name }}"
      state: directory
      recurse: yes
    become: true
  - name: paru | Build and install
    ansible.builtin.command:
      chdir: "/{{ user.home }}/paru"
      cmd: "makepkg -sfi --noconfirm"
      creates: /usr/bin/paru
    become: false
  - name: "paru | config"
    ansible.builtin.template:
      dest: "/etc/paru.conf"
      src: paru.j2
      mode: "0644"
      force: true
    become: true
  - name: paru | Cleanup 
    ansible.builtin.file:
      path: /{{ user.home }}/paru
      state: absent
