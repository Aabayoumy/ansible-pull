---
- name: "System | Checking for Distribution Config: {{ ansible_os_family }}"
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/{{ ansible_os_family }}.yml"
  register: system_distribution_config

- name: "System | Run Tasks: {{ ansible_os_family }}"
  ansible.builtin.include_tasks: "{{ ansible_os_family }}.yml"
  when: system_distribution_config.stat.exists

- name: "System | Set hosts"
  ansible.builtin.template:
    dest: "/etc/hosts"
    src: hosts.j2
    mode: "0644"
  become: true

- name: Get current timezone
  ansible.builtin.command: timedatectl show --property=Timezone --value
  register: current_timezone
  changed_when: false

- name: Set timezone to Africa/Cairo
  community.general.timezone:
    name: Africa/Cairo
  become: true
  become_method: sudo
  when: current_timezone.stdout != 'Africa/Cairo'

- name: Install procs in Arch/Fedora
  become: true
  ansible.builtin.package:
    state: present
    name: procs
  when: ansible_os_family != 'Debian'

- name: Install zoxide through package manager
  become: true
  ansible.builtin.package:
    state: present
    name: zoxide
  when: ansible_os_family != 'Debian' or ansible_distribution_version is version('20.10', '>=')

- name: Install fzf (command-line fuzzy finder)
  become: true
  ansible.builtin.package:
    state: present
    name: fzf

# - name: Check if dust is already installed on Ubuntu/Fedora
#   ansible.builtin.shell: >
#     dust --version
#   register: dust_rc
#   failed_when: false
#   changed_when: false
#   when: ansible_os_family != 'Archlinux'

# - name: Install dust on Ubuntu/Fedora
#   become: true
#   ansible.builtin.unarchive:
#     src: "https://github.com/bootandy/dust/releases/download/{{ dustversion }}/dust-{{ dustversion }}-x86_64-unknown-linux-gnu.tar.gz"
#     dest: /usr/local/bin
#     extra_opts:
#       - --strip=1
#       - --wildcards
#       - '*/dust'
#     remote_src: true
#   when: ansible_os_family != 'Archlinux' and dust_rc.rc != 0

- name: Set permissions on /etc/passwd-
  ansible.builtin.file:
    path: /etc/passwd-
    owner: root
    group: root
    mode: '0600'
  become: true

- name: Set permissions on /etc/group-
  ansible.builtin.file:
    path: /etc/group-
    owner: root
    group: root
    mode: '0600'
  become: true

- name: Add entry in /etc/tmpfiles.d/etc.conf
  ansible.builtin.lineinfile:
    path: /etc/tmpfiles.d/etc.conf
    line: 'f /etc/group- 0600 root root -'
    create: true
  become: true

- name: Secure logs
  block:
    - name: Secure logs with chmod
      ansible.builtin.command:
        cmd: "find /var/log/ -type f -perm /g+wx,o+rwx -exec chmod g-wx,o-rwx \"{}\" +"
      become: true

    - name: Update /etc/rsyslog.conf
      ansible.builtin.lineinfile:
        path: /etc/rsyslog.conf
        line: "{{ item }}"
        insertafter: EOF
        create: true
      loop:
        - "$FileCreateMode 0640"
        - "$FileOwner root"
        - "$umask 077"
      become: true
    - name: Add entry in /etc/tmpfiles.d/var.conf
      ansible.builtin.lineinfile:
        path: /etc/tmpfiles.d/var.conf
        line: "{{ item }}"
        create: true
      loop:
        - "f /var/log/faillog 0640 root root -"
        - "f /var/log/wtmp 0640 root utmp -"
        - "f /var/log/btmp 0640 root utmp -"
        - "f /var/log/lastlog 0640 root utmp -"
      become: true

- name: Secure su
  block:
    - name: Create wheel group if not exist
      ansible.builtin.group:
        name: wheel
        state: present
      become: true

    - name: Secure su
      ansible.builtin.lineinfile:
        path: /etc/pam.d/su
        line: 'auth required pam_wheel.so use_uid'
        insertafter: EOF
        create: true
      become: true
      
# - name: Disable IPv6
#   block:
#     - name: Disable IPv6 via sysctl
#       ansible.builtin.sysctl:
#         name: "{{ item }}"
#         value: '1'
#         state: present
#         reload: yes
#       loop:
#         - net.ipv6.conf.all.disable_ipv6
#         - net.ipv6.conf.default.disable_ipv6
#         - net.ipv6.conf.lo.disable_ipv6
#       become: yes

#     - name: Check if GRUB is installed
#      ansible.builtin.stat:
#         path: /etc/default/grub
#       register: grub_installed

#     - name: Update GRUB to disable IPv6
#       ansible.builtin.lineinfile:
#         path: /etc/default/grub
#         regexp: '^GRUB_CMDLINE_LINUX_DEFAULT='
#         line: 'GRUB_CMDLINE_LINUX_DEFAULT="ipv6.disable=1"'
#       become: yes
#       notify: Update GRUB
#       when: grub_installed.stat.exists